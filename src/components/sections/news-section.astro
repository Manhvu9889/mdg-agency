---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import { getCollection, type CollectionEntry } from 'astro:content';

interface NewsSectionProps {
    className: string;
}

const { className } = Astro.props as NewsSectionProps;
const allPosts = await getCollection('bai-viet');
const latestPosts: CollectionEntry<'bai-viet'>[] = allPosts
    .sort((a: CollectionEntry<'bai-viet'>, b: CollectionEntry<'bai-viet'>) => {
        const dateA = new Date(a.data.readTime);
        const dateB = new Date(b.data.readTime);
        return dateB.getTime() - dateA.getTime();
    })
    .slice(0, 10);
if (latestPosts.length === 0) return null;
---

<section class={className}>
    <div class="container mx-auto px-4">
        <div class="mb-8 text-center">
            <h2 class="mb-4 text-3xl font-bold text-white">
                What's new this week?
            </h2>
            <p class="text-blue-100">News articles, expertise</p>
        </div>

        <div class="relative">
            <div class="relative mx-12">
                <div class="overflow-hidden">
                    <div
                        id="postsContainer"
                        class="flex gap-6 transition-transform duration-300 ease-in-out"
                    >
                        {
                            latestPosts.map((post) => (
                                <article class="w-full flex-shrink-0 overflow-hidden rounded-xl bg-white/95 shadow-lg backdrop-blur-sm md:w-1/2 lg:w-1/4">
                                    <div class="relative h-52 overflow-hidden sm:h-64">
                                        <Image
                                            src={post.data.thumbnail}
                                            alt={post.data.title}
                                            class="h-full w-full object-cover"
                                            loading="lazy"
                                            width={400}
                                            height={400}
                                        />
                                        <span class="absolute right-4 top-4 rounded-full bg-blue-100 px-3 py-1 text-sm font-medium text-blue-800">
                                            {post.data.category}
                                        </span>
                                    </div>

                                    <div class="p-6">
                                        <time class="mb-2 block text-sm text-gray-600">
                                            {post.data.readTime}
                                        </time>
                                        <h3 class="mb-2 line-clamp-2 text-xl font-semibold text-gray-900">
                                            {post.data.title}
                                        </h3>
                                        <p class="mb-4 line-clamp-3 text-gray-700">
                                            {post.data.description}
                                        </p>
                                        <a
                                            href={`/news/${post.slug}`}
                                            class="inline-flex items-center font-medium text-blue-800 hover:text-blue-900"
                                        >
                                            Read more
                                            <Icon
                                                name="fa6-solid:arrow-right"
                                                class="ml-2 h-4 w-4"
                                            />
                                        </a>
                                    </div>
                                </article>
                            ))
                        }
                    </div>
                </div>
            </div>

            <button
                id="prevBtn"
                class="absolute -left-4 top-1/2 -translate-y-1/2 rounded-full bg-blue-600 p-3 text-white transition-all hover:bg-blue-700 disabled:opacity-50"
                aria-label="Previous posts"
            >
                <Icon name="fa6-solid:arrow-left" class="h-5 w-5" />
            </button>
            <button
                id="nextBtn"
                class="absolute -right-4 top-1/2 -translate-y-1/2 rounded-full bg-blue-600 p-3 text-white transition-all hover:bg-blue-700 disabled:opacity-50"
                aria-label="Next posts"
            >
                <Icon name="fa6-solid:arrow-right" class="h-5 w-5" />
            </button>
        </div>

        <div class="mt-12 text-center">
            <a
                href="/news"
                class="inline-flex items-center gap-2 rounded-lg bg-white/10 px-6 py-3 text-white transition-all hover:bg-white/20"
            >
                Show more news
                <Icon name="fa6-solid:arrow-right" class="h-4 w-4" />
            </a>
        </div>
    </div>
</section>

<script>
    const postsContainer = document.getElementById('postsContainer');
    const prevBtn = document.getElementById('prevBtn') as HTMLButtonElement;
    const nextBtn = document.getElementById('nextBtn') as HTMLButtonElement;

    let currentPage = 0;
    const totalPosts = postsContainer?.children.length ?? 0;

    const getItemsPerPage = () => {
        if (window.innerWidth >= 1024) return 4;
        if (window.innerWidth >= 768) return 2;
        return 1;
    };

    const updateVisibility = () => {
        if (!postsContainer) return;

        const itemsPerPage = getItemsPerPage();
        const maxPages = Math.ceil(totalPosts / itemsPerPage) - 1;

        const translateX = (currentPage * 100) / itemsPerPage;
        postsContainer.style.transform = `translateX(-${translateX}%)`;

        if (prevBtn) prevBtn.disabled = currentPage === 0;
        if (nextBtn) nextBtn.disabled = currentPage >= maxPages;
    };

    window.addEventListener('resize', () => {
        currentPage = 0;
        updateVisibility();
    });

    prevBtn?.addEventListener('click', () => {
        if (currentPage > 0) {
            currentPage--;
            updateVisibility();
        }
    });

    nextBtn?.addEventListener('click', () => {
        if (currentPage < totalPosts - 1) {
            currentPage++;
            updateVisibility();
        }
    });
    let touchStartX = 0;
    let touchEndX = 0;

    postsContainer?.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
    });

    postsContainer?.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
    });

    const handleSwipe = () => {
        const swipeThreshold = 50;
        const diff = touchStartX - touchEndX;

        if (Math.abs(diff) < swipeThreshold) return;

        if (diff > 0 && currentPage < totalPosts - 1) {
            currentPage++;
            updateVisibility();
        } else if (diff < 0 && currentPage > 0) {
            currentPage--;
            updateVisibility();
        }
    };

    updateVisibility();
</script>
